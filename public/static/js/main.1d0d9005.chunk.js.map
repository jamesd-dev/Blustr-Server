{"version":3,"sources":["config.js","components/cards/StoryCard.js","components/panels/view/BrowseStoriesPanel.js","components/panels/view/create/CreateInput.js","components/navbar/Navitem.js","components/navbar/MessageBar.js","components/navbar/Navbar.js","components/panels/view/create/CreatePanel.js","components/panels/view/auth/AuthPanel.js","components/panels/view/viewCard/ViewCardPanel.js","components/panels/view/FocusPanel.js","components/pages/ViewStoriesPage.js","App.js","serviceWorker.js","index.js"],"names":["API_URL","process","StoryCard","getFirstImage","props","story","content","find","elem","test","getFirstTextSection","firstXWords","split","slice","join","this","id","className","Math","random","onClick","showStory","src","alt","onLoad","checkIfWide","Component","BrowseStoriesPanel","handleScroll","document","documentElement","scrollTop","window","innerHeight","offsetHeight","requestNextPage","addEventListener","removeEventListener","stories","map","index","key","CreateInput","state","sections","type","BLANK","OPTIONS","TEXT","IMAGE","wrapValue","section","handleAdd","sectype","handleTextInput","handleImageInput","name","onBlur","handleFocusOut","autoFocus","onChange","updateTextArea","value","showImage","handleEditImage","placeholder","updateValue","console","log","e","target","getAttribute","setState","clientHeight","scrollHeight","style","height","removeSection","length","push","reindexSections","splice","NavItem","item","icon","click","stat","MessageBar","message","Navbar","items","CreatePanel","defaultImages","handleAccept","getFormContent","coverImage","floor","unshift","axios","post","config","withCredentials","then","catch","err","finally","returnToBrowse","formChildren","getElementById","childNodes","call","firstChild","filter","closeFocusPanel","text","AuthPanel","isSignIn","toggleAuthState","email","username","password","route","res","data","updateUserData","ViewCardPanel","get","_id","replaceStory","likes","dislikes","delete","removeStory","getContent","like","loggedInUser","patch","updateStoryState","cssLikeDislikeElement","loadAuth","dislike","altStory","alteredStories","storyId","liked","getElementsByClassName","classList","add","remove","disliked","FocusPanel","panelState","getPanelComponent","loadCreate","loadViewCard","setPanelState","refreshStories","user","querySelector","ViewStoriesPage","page","useFocusPanel","focusPanelState","fetchPage","toggleUseFocusPanel","setUseFocusPanel","bool","loadCreatePanel","loadViewCardPanel","newStories","seedEmptyDatabase","i","response","getFocusPanel","App","loggedinUser","getUser","status","path","render","Boolean","location","hostname","match","ReactDOM","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.1d0d9005.chunk.js","sourcesContent":["export default {\r\n    //API_URL: process.env.API_URL || 'http://localhost:5000/api'\r\n    API_URL: process.env.API_URL || 'https://blustr.herokuapp.com/api'\r\n}","import React, { Component } from \"react\";\r\nimport \"./styles/StoryCard.css\";\r\n\r\nexport default class StoryCard extends Component {\r\n  render() {\r\n    const story = this.props.story;\r\n    return (\r\n      <div id=\"story-card\" className={(Math.random() * 4 < 1) ? 'story-card card-wide' : 'story-card'} onClick={() => {this.props.showStory(story)}}>\r\n      <div id='inner-story-card'>\r\n        <img\r\n          id=\"story-card-cover-image\"\r\n          src={this.getFirstImage()}\r\n          alt=\"story cover\"\r\n          onLoad={this.checkIfWide}\r\n        />\r\n        <div id=\"story-card-text-panel\">\r\n          <p id=\"story-card-teaser\">\r\n            {\r\n              // find first content entry that isn't an image address\r\n              // only displays first 20 words as it's a teaser\r\n              this.getFirstTextSection()\r\n            }\r\n            ...\r\n          </p>\r\n        </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  getFirstImage = () => {\r\n    return this.props.story.content\r\n    .find((elem) => {\r\n      return (/(http(s?):)/.test(\r\n        elem\r\n      ));\r\n    })\r\n  }\r\n\r\n  getFirstTextSection = () => {\r\n      \r\n    // finds first text section and rips the first few words to display\r\n    let firstXWords = this.props.story.content\r\n    .find((elem) => {\r\n      return !(/(http(s?):)/.test(\r\n        elem\r\n      ));\r\n    })\r\n\r\n    if(firstXWords) firstXWords = firstXWords\r\n    .split(\" \")\r\n    .slice(0, 10)\r\n    .join(\" \");\r\n\r\n    return firstXWords;\r\n\r\n  }\r\n\r\n}","// libraries\r\nimport React, {Component} from 'react';\r\n// styles\r\nimport './styles/BrowseStoriesPanel.css'\r\n// components\r\nimport StoryCard from '../../cards/StoryCard'\r\n\r\nexport default class BrowseStoriesPanel extends Component {\r\n\r\n    componentDidMount() {\r\n        window.addEventListener('scroll', this.handleScroll, false);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('scroll', this.handleScroll, false);\r\n    }\r\n\r\n    // calls for next page of stories if user has scrolled to the bottom of the screen\r\n    handleScroll = () => {\r\n        let bottomOfWindow = document.documentElement.scrollTop + window.innerHeight === document.documentElement.offsetHeight;\r\n  \r\n        if (bottomOfWindow) {\r\n          this.props.requestNextPage();\r\n        }\r\n      };\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div id='browse-stories-panel'>\r\n                    {\r\n                        this.props.stories.map((story, index) => {\r\n                            return <StoryCard key={index} story={story} showStory={this.props.showStory}/>\r\n                        })\r\n                    }\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n\r\n}","import React, { Component } from \"react\";\r\nimport \"./styles/CreateInput.css\";\r\n\r\nexport default class CreateInput extends Component {\r\n  \r\n  componentDidMount() {\r\n    this.setState({\r\n      sections: [{ type: this.state.type.BLANK, index: 0, value: \"\" }],\r\n    });\r\n  }\r\n\r\n  state = {\r\n    sections: [],\r\n    type: {\r\n      // defines type of html element to wrap section in later\r\n      BLANK: 'BLANK',\r\n      OPTIONS: 'OPTIONS',\r\n      TEXT: 'TEXT',\r\n      IMAGE: 'IMAGE',\r\n    },\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.state.sections.map((section) => {\r\n          return this.wrapValue(section);\r\n        })}\r\n      </>\r\n    );\r\n  }\r\n\r\n  // expects sections to have at least {type, value, index}\r\n  wrapValue = (section) => {\r\n    switch (section.type) {\r\n      case this.state.type.BLANK: {\r\n        return (\r\n          <div className=\"create-input-div\" key={section.index}>\r\n            <div id=\"icon-div\">\r\n              <i className=\"fas fa-plus create-icon\" onClick={this.handleAdd} index={section.index} sectype={section.type}/>\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n      case this.state.type.OPTIONS: {\r\n        return (\r\n          <div className=\"create-input-div\" key={section.index}>\r\n            <div id=\"icon-div\">\r\n              <i\r\n                className=\"fas fa-edit create-icon\"\r\n                onClick={this.handleTextInput}\r\n                index={section.index}\r\n                sectype={section.type}\r\n              />\r\n              <i\r\n                className=\"fas fa-image create-icon\"\r\n                onClick={this.handleImageInput}\r\n                index={section.index}\r\n                sectype={section.type}\r\n              />\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n      case this.state.type.TEXT: {\r\n        return (\r\n          <div className=\"create-input-div\" key={section.index}>\r\n            <textarea\r\n              name=\"textInput\"\r\n              className=\"create-textInput\"\r\n              onBlur={this.handleFocusOut}\r\n              autoFocus\r\n              onChange={this.updateTextArea}\r\n              value={section.value}\r\n              index={section.index}\r\n              sectype={section.type}\r\n            ></textarea>\r\n          </div>\r\n        );\r\n      }\r\n      case this.state.type.IMAGE: {\r\n        if(!section.showImage) {\r\n          return (\r\n            <div className=\"create-input-div\" key={section.index}>\r\n              <input\r\n                type=\"text\"\r\n                name=\"imageInput\"\r\n                className=\"create-imageInput\"\r\n                placeholder=\"image url\"\r\n                autoFocus\r\n                onChange={this.updateValue}\r\n                value={section.value}\r\n                index={section.index}\r\n                sectype={section.type}\r\n                onBlur={this.handleFocusOut}\r\n              />\r\n            </div>\r\n          )\r\n        } else {\r\n          return (\r\n            <div className=\"create-input-div\" id='create-image-input-div' key={section.index}>\r\n              <img\r\n                src={section.value}\r\n                name=\"imageInput\"\r\n                className=\"input-image\"\r\n                index={section.index}\r\n                sectype={section.type}\r\n                alt={'user inserted img'}\r\n                onClick={this.handleEditImage}\r\n              />\r\n            </div>\r\n          )\r\n        }\r\n      }\r\n      default: {\r\n        console.log(\"Unknown section type in CreateInput\");\r\n        return (\r\n        <div className=\"create-input-div\" key={section.index}>\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  updateValue = (e) => {\r\n    let sections = this.state.sections;\r\n    sections[e.target.getAttribute('index')].value = e.target.value;\r\n    this.setState({\r\n        sections: sections\r\n    })\r\n  };\r\n\r\n  updateTextArea = (e) => {\r\n    this.updateValue(e);\r\n    if (e.target.clientHeight < e.target.scrollHeight) {\r\n      e.target.style.height = e.target.scrollHeight + 'px';\r\n    }\r\n  }\r\n\r\n  handleFocusOut = (e) => {\r\n    if(e.target.value === '') {\r\n        this.removeSection(e);\r\n    } else {\r\n\r\n    let sections = this.state.sections;\r\n\r\n    // turn image source to image when defocused\r\n    if(sections[e.target.getAttribute('index')].type === this.state.type.IMAGE) {\r\n      sections[e.target.getAttribute('index')].showImage = true;\r\n      this.setState({\r\n        sections: sections\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  let type = '';\r\n    let sections = this.state.sections;\r\n\r\n    if(sections.length > 0) {\r\n        type = sections[sections.length - 1].type;\r\n    }\r\n    if(type !== this.state.type.BLANK && type !== this.state.type.OPTIONS) {\r\n\r\n        sections.push({ type: this.state.type.BLANK, index: 0, value: \"\" });\r\n        this.setState({\r\n            sections: sections\r\n        });\r\n        this.reindexSections();\r\n    }\r\n  };\r\n\r\n  removeSection = (e) => {\r\n    let sections = this.state.sections.splice(e.target.getAttribute('index'), 1);\r\n    this.setState({\r\n        sections: sections\r\n    })\r\n    this.reindexSections();\r\n  }\r\n\r\n  reindexSections = () => {\r\n    let sections = this.state.sections;\r\n    sections = sections.map((section, index) => {section.index = index; return section;})\r\n    this.setState({\r\n        sections: sections\r\n    })\r\n  }\r\n\r\n  handleAdd = (e) => {\r\n    let sections = this.state.sections;\r\n    sections[e.target.getAttribute('index')].type = this.state.type.OPTIONS;\r\n    this.setState({\r\n        sections: sections\r\n    })\r\n  }\r\n\r\n  handleTextInput = (e) => {\r\n    let sections = this.state.sections;\r\n    sections[e.target.getAttribute('index')].type = this.state.type.TEXT;\r\n    this.setState({\r\n        sections: sections\r\n    })\r\n  }\r\n\r\n  handleEditImage = (e) => {\r\n    let sections = this.state.sections;\r\n\r\n        // make image source editable when image is clicked\r\n        if(sections[e.target.getAttribute('index')].type === this.state.type.IMAGE) {\r\n          sections[e.target.getAttribute('index')].showImage = false;\r\n        }\r\n\r\n        this.setState({\r\n            sections: sections\r\n        });\r\n  }\r\n\r\n  handleImageInput = (e) => {\r\n    let sections = this.state.sections;\r\n    sections[e.target.getAttribute('index')].type = this.state.type.IMAGE;\r\n    this.setState({\r\n        sections: sections\r\n    })\r\n  }\r\n}\r\n","import React from 'react';\r\nimport './styles/Navitem.css'\r\n\r\nexport default function NavItem(props) {\r\n    //takes props in the form {text, icon, click}\r\n    return (\r\n        <div className='nav-icon'>\r\n            <i className={props.item.icon} onClick={props.item.click}/>\r\n            {(props.item.stat) ? <p className='nav-icon-stat'>{props.item.stat}</p> : <></>}\r\n        </div>\r\n    );\r\n\r\n}","import React from 'react';\r\nimport './styles/MessageBar.css'\r\n\r\nexport default function MessageBar(props) {\r\n\r\n    // takes props in the form [{text, icon, clickFunction}]\r\n    return (\r\n        <div id='message-bar'>\r\n            {\r\n                <p id='message-bar-message'>{props.message}</p>\r\n            }\r\n        </div>\r\n    );\r\n\r\n}","import React, {Component} from 'react';\r\nimport './styles/Navbar.css'\r\nimport Navitem from './Navitem'\r\nimport MessageBar from './MessageBar'\r\n\r\nexport default class Navbar extends Component {\r\n\r\n    componentDidMount() {\r\n        if(this.props.onLoad) {\r\n            this.props.onLoad();\r\n        }\r\n    }\r\n\r\n    // takes props in the form [{text, icon, clickFunction}]\r\n    render() {\r\n    return (\r\n        <div id='ui-container'>\r\n        <div id='navbar'>\r\n            {\r\n                this.props.items.map((item, index) => {\r\n                    return (<Navitem item={item} key={index}/>)\r\n                })\r\n            }\r\n        </div>\r\n        <MessageBar message={'demo message'}/>\r\n        </div>\r\n    );\r\n        }\r\n\r\n}","// libraries\r\nimport React, { Component } from \"react\";\r\nimport axios from 'axios';\r\n// useful data\r\nimport config from '../../../../config'\r\n// styles\r\nimport \"./styles/CreatePanel.css\";\r\n// components\r\nimport CreateInput from \"./CreateInput\";\r\nimport Navbar from \"../../../navbar/Navbar\";\r\n\r\nexport default class CreatePanel extends Component {\r\n\r\n    state = {\r\n        defaultImages: [\r\n            \"https://images.unsplash.com/photo-1514866546504-0c2bbda5f16d?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=500&q=60\",\r\n            \"https://images.unsplash.com/photo-1510191250627-6fdf443cfec4?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=500&q=60\",\r\n            \"https://images.unsplash.com/photo-1554174532-48b37f80a254?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=500&q=60\",\r\n            \"https://images.unsplash.com/photo-1530800633399-2d35227b35b2?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=500&q=60\",\r\n            \"https://images.unsplash.com/photo-1512237260610-23782f4c1bfe?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=500&q=60\",\r\n            \"https://images.unsplash.com/photo-1572989753782-accb88ad01f0?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=634&q=80\",\r\n        ],\r\n    }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <form id=\"form\">\r\n          <CreateInput />\r\n          <Navbar\r\n            items={[\r\n              {\r\n                text: \"Accept\",\r\n                icon: \"fas fa-check\",\r\n                click: this.handleAccept,\r\n              },\r\n              {\r\n                text: \"Cancel\",\r\n                icon: \"fas fa-times\",\r\n                click: this.returnToBrowse,\r\n              },\r\n            ]}\r\n          />\r\n        </form>\r\n      </>\r\n    );\r\n  }\r\n\r\n  handleAccept = () => {\r\n    // get data\r\n    let content = this.getFormContent();\r\n\r\n    // get first image in content (if any)\r\n    let coverImage = content.find((elem) => {\r\n      return /(http(s?):)/.test(elem);\r\n    });\r\n\r\n    // if no images in content, append a random default one to the start\r\n    if (!coverImage) {\r\n      coverImage = this.state.defaultImages[\r\n        Math.floor(Math.random() * this.state.defaultImages.length)\r\n      ];\r\n      content.unshift(\r\n        coverImage\r\n      );\r\n  }\r\n\r\n      // create story in database\r\n      axios.post(\r\n        `${config.API_URL}/story/create`,\r\n        { content },\r\n        { withCredentials: true }\r\n      )\r\n        .then(() => {\r\n          console.log(\"created post\");\r\n        })\r\n        .catch((err) => {\r\n          console.log(\"failed to create post\");\r\n          console.log(\"error: \", err);\r\n        })\r\n        .finally(() => {\r\n          this.returnToBrowse();\r\n        });\r\n  };\r\n\r\n  getFormContent = () => {\r\n    let formChildren = document.getElementById(\"form\").childNodes;\r\n    let content = [].map.call(formChildren, (section) => {\r\n      return section.firstChild.value || section.firstChild.src;\r\n    });\r\n    content = [].filter.call(content, (section) => {\r\n      return section;\r\n    });\r\n    return content;\r\n  };\r\n\r\n  returnToBrowse = () => {\r\n    this.props.closeFocusPanel();\r\n  };\r\n}\r\n","// libraries\r\nimport React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n// useful data\r\nimport config from \"../../../../config\";\r\n// styles\r\nimport \"./styles/AuthPanel.css\";\r\n//components\r\nimport Navbar from \"../../../navbar/Navbar\";\r\n\r\nexport default class AuthPanel extends Component {\r\n  state = {\r\n    isSignIn: true,\r\n  };\r\n\r\n  toggleAuthState = () => {\r\n    this.setState({\r\n      isSignIn: !this.state.isSignIn,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form id=\"form\">\r\n        {this.state.isSignIn ? <h1>Sign In</h1> : <h1>Sign Up</h1>}\r\n        <div className=\"auth-input-div\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"username\"\r\n            name=\"username\"\r\n            id=\"username-input\"\r\n          />\r\n        </div>\r\n        <div className=\"auth-input-div\">\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"password\"\r\n            name=\"password\"\r\n            id=\"password-input\"\r\n          />\r\n        </div>\r\n        {this.state.isSignIn ? (\r\n          <p className=\"auth-link\" onClick={this.toggleAuthState}>\r\n            Sign Up?\r\n          </p>\r\n        ) : (\r\n          <>\r\n            <div className=\"auth-input-div\">\r\n              <input\r\n                type=\"email\"\r\n                placeholder=\"email\"\r\n                name=\"email\"\r\n                id=\"email-input\"\r\n              />\r\n            </div>\r\n            <p className=\"auth-link\" onClick={this.toggleAuthState}>\r\n              Sign In?\r\n            </p>\r\n          </>\r\n        )}\r\n        <Navbar\r\n          items={[\r\n            {\r\n              text: \"Accept\",\r\n              icon: \"fas fa-check\",\r\n              click: this.handleAccept,\r\n            },\r\n            {\r\n              text: \"Cancel\",\r\n              icon: \"fas fa-times\",\r\n              click: this.returnToBrowse,\r\n            },\r\n          ]}\r\n        />\r\n      </form>\r\n    );\r\n  }\r\n\r\n  returnToBrowse = () => {\r\n    this.props.closeFocusPanel();\r\n  };\r\n\r\n  getFormContent = () => {\r\n    let formChildren = document.getElementById(\"form\").childNodes;\r\n    let content = [].map.call(formChildren, (section) => {\r\n      return section.firstChild.value;\r\n    });\r\n    content = [].filter.call(content, (section) => {\r\n      return section;\r\n    });\r\n    return content;\r\n  };\r\n\r\n  handleAccept = () => {\r\n    let content = this.getFormContent();\r\n    // create post\r\n\r\n    let email = content[2];\r\n    let username = content[0];\r\n    let password = content[1];\r\n    let route = email ? \"signup\" : \"signin\";\r\n    axios\r\n      .post(\r\n        `${config.API_URL}/${route}`,\r\n        {\r\n          email: email,\r\n          username: username,\r\n          password: password,\r\n        },\r\n        { withCredentials: true }\r\n      )\r\n      .then((res) => {\r\n        console.log('Created user: ', res.data.username)\r\n        this.props.updateUserData(res.data);\r\n        // should reroute to whatever panel called it by default now.\r\n        // does not however\r\n        this.returnToBrowse();\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"failed to create/login user\");\r\n        console.log('err: ', err);\r\n        this.returnToBrowse();\r\n      });\r\n  };\r\n}\r\n","// libraries\r\nimport React, { Component } from \"react\";\r\nimport axios from 'axios';\r\n// useful data\r\nimport config from '../../../../config'\r\n// styles\r\nimport \"./styles/ViewCardPanel.css\";\r\n// components\r\nimport Navbar from \"../../../navbar/Navbar\"\r\n\r\nexport default class ViewCardPanel extends Component {\r\n\r\n    componentDidMount() {\r\n        this.cssLikeDislikeElement();\r\n    }\r\n\r\n    state = {\r\n        story: this.props.story\r\n    }\r\n\r\n  render() {\r\n\r\n    console.log(this.state.story.likes);\r\n\r\n    return (\r\n        <>\r\n        <div id='view-card-content'>\r\n            {this.getContent()}\r\n        </div>\r\n        <Navbar\r\n            items={[\r\n                {\r\n                text: \"Like\",\r\n                icon: \"fas fa-thumbs-up\",\r\n                click: this.like,\r\n                stat: this.state.story.likes\r\n              },\r\n              {\r\n                text: \"Dislike\",\r\n                icon: \"fas fa-thumbs-down\",\r\n                click: this.dislike,\r\n                stat: this.state.story.dislikes\r\n              },\r\n              {\r\n                text: \"Cancel\",\r\n                icon: \"fas fa-times\",\r\n                click: this.returnToBrowse,\r\n              },\r\n            ]}\r\n            onLoad={this.cssLikeDislikeElement}\r\n          />\r\n          </>\r\n    );\r\n  }\r\n\r\n  returnToBrowse = () => {\r\n\r\n    axios.get(`${config.API_URL}/story/${this.props.story._id}`)\r\n    .then((story) => {\r\n        this.props.replaceStory(story);\r\n        // has to be +1 likes, else if it gets disliked with 0 likes it gets deleted\r\n        if((story.data.likes + 1) * 10 < story.data.dislikes) {\r\n            axios.delete(`${config.API_URL}/story/${this.props.story._id}`)\r\n            .then(() => {\r\n                this.props.removeStory(story.data);\r\n                console.log('removed unpopular story');\r\n            })\r\n            .catch(() => {\r\n                console.log('failed to remove unpopular story');\r\n            })\r\n        }\r\n    })\r\n    .catch(() => {\r\n        console.log('failed to get story');\r\n    })\r\n\r\n    this.props.closeFocusPanel();\r\n  };\r\n\r\n  getContent = () => {\r\n      \r\n    // seperate content out into images and text and wrap them accordingly\r\n    return this.props.story.content.map((section, index) => {\r\n        // link ... or in this current build, an image\r\n        if((/(http(s?):)/.test(section))) {\r\n            return (\r\n                <img src={section} alt={'story'} className='story-image' key={index}/>\r\n            )\r\n        } else { // not a link. text for now\r\n            return (\r\n                <article className='story-text' key={index}>\r\n                    {section}\r\n                </article>\r\n            )\r\n        }\r\n    })\r\n\r\n  }\r\n\r\n  like = () => {\r\n    if(!this.props.loggedInUser) {\r\n        this.props.loadAuth();\r\n    } else {\r\n        axios.patch( `${config.API_URL}/story/${this.props.story._id}/like`, {}, { withCredentials: true })\r\n        .then(() => {\r\n            axios\r\n            .get(`${config.API_URL}/user`, { withCredentials: true })\r\n            .then((res) => {\r\n                this.updateStoryState();\r\n                this.cssLikeDislikeElement();\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"failed to obtain user data\");\r\n            });\r\n        })\r\n        .catch((err) => {console.log(err)})\r\n    }\r\n  }\r\n\r\n  dislike = () => {\r\n    if(!this.props.loggedInUser) {\r\n        this.props.loadAuth();\r\n    } else {\r\n        axios.patch( `${config.API_URL}/story/${this.props.story._id}/dislike`, {}, { withCredentials: true })\r\n        .then(() => {\r\n            this.updateStoryState();\r\n            this.cssLikeDislikeElement();\r\n        })\r\n        .catch((err) => {console.log(err)})\r\n    }\r\n  }\r\n\r\n  updateStoryState = () => {\r\n    axios.get( `${config.API_URL}/story/${this.props.story._id}`)\r\n    .then((res) => {\r\n        console.log(res.data);\r\n        this.setState({\r\n            story: res.data\r\n        })\r\n    })\r\n    .catch(() => {\r\n        console.log('failed to update story data');\r\n    })\r\n  }\r\n\r\n  cssLikeDislikeElement() {\r\n    axios\r\n            .get(`${config.API_URL}/user`, { withCredentials: true })\r\n            .then((res) => {\r\n                let altStory = res.data.alteredStories.find((e) => {\r\n                    return e.storyId === this.props.story._id;\r\n                });\r\n                if(altStory.liked) document.getElementsByClassName('fa-thumbs-up')[0].classList.add('selected');\r\n                else document.getElementsByClassName('fa-thumbs-up')[0].classList.remove('selected');\r\n                if(altStory.disliked) document.getElementsByClassName('fa-thumbs-down')[0].classList.add('selected');\r\n                else document.getElementsByClassName('fa-thumbs-down')[0].classList.remove('selected');\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"failed to obtain user data\");\r\n            });\r\n  }\r\n\r\n}","// libraries\r\nimport React, {Component} from 'react';\r\n// styles\r\nimport './styles/FocusPanel.css'\r\n// components\r\nimport CreatePanel from './create/CreatePanel';\r\nimport AuthPanel from './auth/AuthPanel'\r\nimport ViewCardPanel from './viewCard/ViewCardPanel'\r\n\r\nexport default class FocusPanel extends Component {\r\n\r\n    state = {\r\n        panelState: '', // The specific component to load onto the base panel\r\n        loggedInUser: {},\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.querySelector('body').classList.add('scroll-freeze');\r\n        // if called from ViewStoriesPage, this sets the panelState passed through\r\n        // otherwise it can direct it's own state\r\n        this.setState({\r\n            panelState: this.props.panelState,\r\n            loggedInUser: this.props.loggedInUser,\r\n        });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.querySelector('body').classList.remove('scroll-freeze');\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div id='focus-panel'>\r\n                    <div id='inner-panel'>\r\n                        {this.getPanelComponent()}\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n\r\n    // returns component based on the panel state\r\n    getPanelComponent = () => {\r\n        switch (this.state.panelState) {\r\n            case 'create' : return this.loadCreate();\r\n            case 'viewCard' : return this.loadViewCard(this.props.story);\r\n            case 'auth' : return this.loadAuth();\r\n            default:\r\n                return <></>\r\n        }\r\n    }\r\n\r\n    setPanelState = (state) => {\r\n        this.setState({\r\n            panelState: state\r\n        });\r\n    }\r\n\r\n    loadCreate = () => {\r\n        if(!this.state.loggedInUser) {\r\n            return this.loadAuth();\r\n        } else {\r\n            return <CreatePanel\r\n             closeFocusPanel={this.props.closeFocusPanel}\r\n             refreshStories={this.props.refreshStories}\r\n             />\r\n        }\r\n    }\r\n\r\n    loadViewCard = (story) => {\r\n        return <ViewCardPanel\r\n             closeFocusPanel={this.props.closeFocusPanel}\r\n             story={story}\r\n             loadAuth = {() => {this.setPanelState('auth')}}\r\n             loggedInUser={this.state.loggedInUser}\r\n             replaceStory={this.props.replaceStory}\r\n            removeStory={this.props.removeStory}\r\n             />\r\n    }\r\n\r\n    loadAuth = () => {\r\n        return <AuthPanel closeFocusPanel={this.props.closeFocusPanel} updateUserData={this.updateUserData}/>\r\n    }\r\n\r\n    // ensures that user can use user priviledges without reloading page\r\n    updateUserData = (user) => {\r\n        this.props.updateUserData(user);\r\n        this.setState({\r\n            loggedInUser: user\r\n        });\r\n    }\r\n\r\n}","// libraries\r\nimport React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n// useful data\r\nimport config from \"../../config.js\";\r\n// styles\r\nimport \"./styles/ViewStoriesPage.css\";\r\n// components\r\nimport BrowseStoriesPanel from \"../panels/view/BrowseStoriesPanel\";\r\nimport FocusPanel from \"../panels/view/FocusPanel\";\r\nimport Navbar from \"../navbar/Navbar\";\r\n\r\nexport default class ViewStoriesPage extends Component {\r\n  state = {\r\n    stories: [],\r\n    page: 0, // data has to be split into pages for the infinite scroll feature to work\r\n    useFocusPanel: false, // toggles the panel that other view features branch from, such as create, auth and viewing a single story.\r\n    focusPanelState: \"\", // series of states for the focuspanel component to switch between\r\n  };\r\n\r\n  componentDidMount() {\r\n    // fetches first page of data if it's not already downloaded.\r\n    // stops refreshing from creating a large stack of duplicate data.\r\n    if (this.state.stories.length === 0) {\r\n      this.requestNextPage();\r\n    }\r\n    //this.seedEmptyDatabase(); // for creating dummy content\r\n  }\r\n\r\n  // pulls the requested page of data from the database\r\n  // does not update the page number in state\r\n  // also does not check to see if page has already been downloaded\r\n  // so useful fixes to include\r\n  fetchPage(page) {\r\n    axios\r\n      .get(`${config.API_URL}/story/page/${page}`)\r\n      .then((response) => {\r\n        console.log(`Fetched page ${page} of stories`);\r\n        this.setState({\r\n          stories: [...this.state.stories, ...response.data],\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(`Failed to fetched page ${page} of stories`);\r\n      });\r\n  }\r\n\r\n  // Gets next page of story data then increase the page number\r\n  // to help stop duplicate pages\r\n  requestNextPage = () => {\r\n    this.fetchPage(this.state.page);\r\n    this.setState({\r\n      page: this.state.page + 1,\r\n    });\r\n  };\r\n\r\n  toggleUseFocusPanel = () => {\r\n    this.setState({\r\n      useFocusPanel: !this.state.useFocusPanel,\r\n    });\r\n  };\r\n\r\n  setUseFocusPanel = (bool) => {\r\n    this.setState({\r\n      useFocusPanel: bool,\r\n    });\r\n  };\r\n\r\n  loadCreatePanel = () => {\r\n    this.setState({\r\n      useFocusPanel: true,\r\n      focusPanelState: (\r\n        <FocusPanel\r\n          panelState={\"create\"}\r\n          closeFocusPanel={this.toggleUseFocusPanel}\r\n          loggedInUser={this.props.loggedInUser}\r\n          updateUserData={this.props.updateUserData}\r\n          refreshStories={this.refreshStories}\r\n        />\r\n      ),\r\n    });\r\n  };\r\n\r\n  loadViewCardPanel = (story) => {\r\n    this.setState({\r\n      useFocusPanel: true,\r\n      focusPanelState: (\r\n        <FocusPanel\r\n          panelState={\"viewCard\"}\r\n          closeFocusPanel={this.toggleUseFocusPanel}\r\n          loggedInUser={this.props.loggedInUser}\r\n          updateUserData={this.props.updateUserData}\r\n          refreshStories={this.refreshStories}\r\n          replaceStory={this.replaceStory}\r\n          removeStory={this.removeStory}\r\n          story={story}\r\n        />\r\n      ),\r\n    });\r\n  };\r\n\r\n  replaceStory = (story) => {\r\n    let newStories = this.state.stories.map((elem) => {\r\n      if (elem._id === story._id) {\r\n        return story;\r\n      } else {\r\n        return elem;\r\n      }\r\n    });\r\n    this.setState({\r\n      stories: newStories,\r\n    });\r\n  };\r\n\r\n  removeStory = (story) => {\r\n    let newStories = this.state.stories.filter((elem) => {\r\n      return elem._id !== story._id;\r\n    });\r\n    this.setState({\r\n      stories: newStories,\r\n    });\r\n  };\r\n\r\n  getFocusPanel() {\r\n    return this.state.focusPanelState;\r\n  }\r\n\r\n  // reboots the stories array.\r\n  // using it mainly for showing new posts\r\n  refreshStories = () => {\r\n    this.setState({\r\n      stories: [],\r\n      page: 0,\r\n    });\r\n    this.requestNextPage();\r\n  };\r\n\r\n  showStory = (story) => {\r\n    this.loadViewCardPanel(story);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"view-stories-page\">\r\n        <BrowseStoriesPanel\r\n          stories={this.state.stories}\r\n          requestNextPage={this.requestNextPage}\r\n          showStory={this.showStory}\r\n        />\r\n        {\r\n          // Navbar is called seperately in other components in focus panel.\r\n          // But has to be called otherwise here.\r\n          // panelState is used to call the specific panel built on top of the base focusPanel\r\n          this.state.useFocusPanel ? (\r\n            this.getFocusPanel()\r\n          ) : (\r\n            <Navbar\r\n              items={[\r\n                {\r\n                  text: \"Create\",\r\n                  icon: \"fas fa-edit\",\r\n                  click: this.loadCreatePanel,\r\n                },\r\n              ]}\r\n            />\r\n          )\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // for creating dummy content\r\n  seedEmptyDatabase = () => {\r\n    if (this.state.stories.length === 0) {\r\n      for (let i = 0; i < 100; i++) {\r\n        let defaultImages = [\r\n          \"https://images.unsplash.com/photo-1514866546504-0c2bbda5f16d?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=500&q=60\",\r\n          \"https://images.unsplash.com/photo-1510191250627-6fdf443cfec4?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=500&q=60\",\r\n          \"https://images.unsplash.com/photo-1554174532-48b37f80a254?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=500&q=60\",\r\n          \"https://images.unsplash.com/photo-1530800633399-2d35227b35b2?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=500&q=60\",\r\n          \"https://images.unsplash.com/photo-1512237260610-23782f4c1bfe?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=500&q=60\",\r\n          \"https://images.unsplash.com/photo-1572989753782-accb88ad01f0?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=634&q=80\",\r\n          \"https://images.pexels.com/photos/730256/pexels-photo-730256.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500\",\r\n          \"https://images.pexels.com/photos/1366919/pexels-photo-1366919.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500\",\r\n          \"https://images.pexels.com/photos/799420/pexels-photo-799420.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500\",\r\n          \"https://images.pexels.com/photos/3792580/pexels-photo-3792580.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500\",\r\n          \"https://images.pexels.com/photos/2387877/pexels-photo-2387877.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500\",\r\n          \"https://images.pexels.com/photos/949592/pexels-photo-949592.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500\",\r\n          \"https://images.pexels.com/photos/2233416/pexels-photo-2233416.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500\",\r\n            \"https://images.pexels.com/photos/721287/pexels-photo-721287.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500\",\r\n            \"https://images.pexels.com/photos/730256/pexels-photo-730256.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500\",\r\n        ];\r\n\r\n        let content = [\r\n          \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Nisi porta lorem mollis aliquam ut. Urna duis convallis convallis tellus id interdum velit laoreet. Maecenas pharetra convallis posuere morbi leo urna molestie at elementum. Elementum eu facilisis sed odio. Placerat vestibulum lectus mauris ultrices eros in. Sem integer vitae justo eget magna fermentum. Malesuada fames ac turpis egestas sed tempus urna et. Diam in arcu cursus euismod quis viverra nibh. Pharetra pharetra massa massa ultricies mi. Ante in nibh mauris cursus mattis molestie a. Aliquam nulla facilisi cras fermentum odio eu. In nulla posuere sollicitudin aliquam ultrices.\",\r\n\r\n          \"At varius vel pharetra vel turpis nunc eget lorem. Lectus mauris ultrices eros in. Urna duis convallis convallis tellus id interdum velit. Leo in vitae turpis massa. Adipiscing tristique risus nec feugiat in fermentum posuere. Sit amet cursus sit amet dictum. Porta non pulvinar neque laoreet. Luctus venenatis lectus magna fringilla urna. In cursus turpis massa tincidunt dui ut. Amet venenatis urna cursus eget nunc scelerisque viverra. Tincidunt dui ut ornare lectus sit amet est placerat in. Rhoncus urna neque viverra justo nec ultrices dui. Auctor augue mauris augue neque gravida. Neque convallis a cras semper auctor neque vitae tempus quam.\",\r\n\r\n          \"Diam sollicitudin tempor id eu nisl nunc mi ipsum. Amet venenatis urna cursus eget. Turpis egestas integer eget aliquet nibh praesent. Tortor pretium viverra suspendisse potenti nullam ac. Egestas congue quisque egestas diam in arcu cursus. Suspendisse interdum consectetur libero id faucibus nisl tincidunt. Integer feugiat scelerisque varius morbi. Tellus elementum sagittis vitae et leo duis ut diam quam. Dolor sit amet consectetur adipiscing. Lectus arcu bibendum at varius vel pharetra. Dui id ornare arcu odio. Sed vulputate mi sit amet mauris commodo quis. Dignissim suspendisse in est ante. Venenatis lectus magna fringilla urna porttitor rhoncus dolor purus.\",\r\n\r\n          \"Lacus laoreet non curabitur gravida arcu ac tortor dignissim. Ut venenatis tellus in metus vulputate eu scelerisque felis. Enim blandit volutpat maecenas volutpat blandit aliquam. Porta lorem mollis aliquam ut porttitor leo a. Tortor vitae purus faucibus ornare suspendisse sed. Egestas fringilla phasellus faucibus scelerisque. Laoreet id donec ultrices tincidunt arcu non sodales neque sodales. A diam sollicitudin tempor id eu nisl nunc mi ipsum. Egestas sed tempus urna et pharetra pharetra massa massa ultricies. Feugiat in ante metus dictum. Ut morbi tincidunt augue interdum velit euismod in pellentesque massa. Urna nec tincidunt praesent semper feugiat nibh sed pulvinar proin. Diam quam nulla porttitor massa id. At volutpat diam ut venenatis tellus in metus vulputate eu. Dui ut ornare lectus sit amet est placerat in. Pulvinar elementum integer enim neque volutpat ac tincidunt vitae semper. Lectus urna duis convallis convallis tellus id interdum velit.\",\r\n\r\n          \"Lectus magna fringilla urna porttitor rhoncus dolor purus non. Pellentesque habitant morbi tristique senectus et netus et malesuada. Ac feugiat sed lectus vestibulum mattis ullamcorper velit. Nunc congue nisi vitae suscipit. Sed lectus vestibulum mattis ullamcorper velit sed. Neque laoreet suspendisse interdum consectetur libero. Egestas sed tempus urna et. Turpis tincidunt id aliquet risus feugiat in. Sed turpis tincidunt id aliquet risus feugiat. Ut morbi tincidunt augue interdum velit euismod in. Euismod in pellentesque massa placerat duis. Placerat orci nulla pellentesque dignissim enim sit amet. Id semper risus in hendrerit gravida rutrum quisque. Nunc scelerisque viverra mauris in aliquam sem fringilla ut morbi.\",\r\n        ];\r\n\r\n        // get first image in content (if any)\r\n        let coverImage = content.find((elem) => {\r\n          return /(http(s?):)/.test(elem);\r\n        });\r\n\r\n        // if no images in content, append a random default one to the start\r\n        if (!coverImage)\r\n          coverImage = defaultImages[\r\n            Math.floor(Math.random() * defaultImages.length)\r\n          ];\r\n        content.unshift(coverImage);\r\n\r\n          // create story in database\r\n          axios\r\n            .post(\r\n              `${config.API_URL}/story/create`,\r\n              { content},\r\n              { withCredentials: true }\r\n            )\r\n            .then(() => {\r\n              console.log(\"created post\");\r\n            })\r\n            .catch((err) => {\r\n              console.log(\"failed to create post\");\r\n              console.log(\"error: \", err);\r\n            })\r\n        };\r\n      \r\n    }\r\n  };\r\n}\r\n","// libraries\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Switch, Route } from \"react-router-dom\";\n// useful data\nimport config from \"./config\";\n// styles\nimport \"./App.css\";\n// components\nimport ViewStoriesPage from \"./components/pages/ViewStoriesPage\";\n\nclass App extends Component {\n  componentDidMount() {\n    if (!this.state.loggedInUser) {\n      this.getUser();\n    }\n  }\n\n  state = {\n    loggedinUser: {},\n  };\n\n  render() {\n    return (\n      <>\n        <Switch>\n          <Route\n            path=\"/\"\n            render={() => {\n              return (\n                <ViewStoriesPage\n                  loggedInUser={this.state.loggedInUser}\n                  updateUserData={this.updateUserData}\n                />\n              );\n            }}\n          />\n        </Switch>\n      </>\n    );\n  }\n\n  getUser = () => {\n    axios\n      .get(`${config.API_URL}/user`, { withCredentials: true })\n      .then((res) => {\n        this.setState({\n          loggedInUser: res.data,\n        });\n        console.log(\"obtained user data\");\n      })\n      .catch((err) => {\n        if (err.response.status === 401) {\n          console.log(\"failed to obtain user data\");\n        }\n      });\n  };\n\n  updateUserData = (data) => {\n    console.log('updating user data');\n    this.setState({\n      loggedInUser: data,\n    });\n  };\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from 'react-router-dom'\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}